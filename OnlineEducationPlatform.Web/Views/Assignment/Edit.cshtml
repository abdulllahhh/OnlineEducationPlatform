@model OnlineEducationPlatform.Web.ViewModels.AssignmentVewModel
@{
    ViewData["Title"] = "Edit Assignment";
    var now = DateTime.Now.ToString("yyyy-MM-ddTHH:mm");
}
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg border-0" style="border-radius: 1.5rem; background: linear-gradient(135deg, #f9fafc 60%, #e3e9f7 100%);">
                <div class="card-header bg-primary text-white text-center" style="border-top-left-radius: 1.5rem; border-top-right-radius: 1.5rem;">
                    <h2 class="mb-0"><i class="bi bi-pencil-square me-2"></i>Edit Assignment</h2>
                </div>
                <div class="card-body p-5">
                    <form asp-action="Edit" enctype="multipart/form-data">
                        <input type="hidden" asp-for="AssignmentId" />
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        <div class="mb-3">
                            <label asp-for="Title" class="form-label text-secondary"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Description" class="form-label text-secondary"></label>
                            <input asp-for="Description" class="form-control" />
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="DueDate" class="form-label text-secondary"></label>
                            <input asp-for="DueDate" class="form-control" type="datetime-local" min="@now" value="@(Model.DueDate == DateTime.MinValue ? now : Model.DueDate.ToString("yyyy-MM-ddTHH:mm"))" />
                            <span asp-validation-for="DueDate" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="ClassId" class="form-label text-secondary"></label>
                            <select asp-for="ClassId" class="form-control" asp-items="Model.Classes" id="classSelect"></select>
                            <span asp-validation-for="ClassId" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="SubjectId" class="form-label text-secondary"></label>
                            <select asp-for="SubjectId" class="form-control" asp-items="Model.Subjects" id="subjectSelect"></select>
                            <span asp-validation-for="SubjectId" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="AssignmentFile" class="form-label text-secondary">Upload PDF</label>
                            <input asp-for="AssignmentFile" type="file" class="form-control" accept="application/pdf" />
                            <span asp-validation-for="AssignmentFile" class="text-danger"></span>
                            @if (!string.IsNullOrEmpty(Model.FilePath))
                            {
                                <div class="mt-2">
                                    <a href="@Model.FilePath" target="_blank">Current File</a>
                                </div>
                            }
                        </div>
                        <div class="d-grid mt-4">
                            <input type="submit" value="Save" class="btn btn-primary btn-lg" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Remove required/data-val-required from AssignmentFile input on page load
        document.addEventListener('DOMContentLoaded', function() {
            var fileInput = document.getElementById('AssignmentFile');
            if (fileInput) {
                fileInput.removeAttribute('required');
                fileInput.removeAttribute('data-val-required');
            }
        });
        document.getElementById('classSelect').addEventListener('change', function() {
            fetch('/Assignment/GetSubjectsForClass?classId=' + this.value)
                .then(response => response.json())
                .then(subjects => {
                    var subjectSelect = document.getElementById('subjectSelect');
                    subjectSelect.innerHTML = '';
                    subjects.forEach(function(subj) {
                        var opt = document.createElement('option');
                        opt.value = subj.subjectId;
                        opt.textContent = subj.name;
                        subjectSelect.appendChild(opt);
                    });
                });
        });
        // JS validation for file required only if selected
        document.querySelector('form').addEventListener('submit', function(e) {
            var fileInput = document.getElementById('AssignmentFile');
            var fileError = document.querySelector('span[data-valmsg-for="AssignmentFile"]');
            if (fileInput && fileInput.value && !fileInput.value.toLowerCase().endsWith('.pdf')) {
                e.preventDefault();
                if (fileError) fileError.textContent = 'Only PDF files are allowed.';
                fileInput.classList.add('is-invalid');
            } else if (fileError) {
                fileError.textContent = '';
                fileInput.classList.remove('is-invalid');
            }
        });
    </script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
}

